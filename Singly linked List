using System;

namespace SinglyLinkedListExample
{
    // Node class represents each node in the linked list
    public class Node
    {
        public int data;    // Data stored in the node
        public Node next;   // Pointer to the next node

        // Constructor to initialize the node's data
        public Node(int value)
        {
            data = value;
            next = null;
        }
    }

    // LinkedList class to manage the linked list operations
    public class LinkedList
    {
        public Node head;   // Head node of the linked list

        // Method to add a new node to the end of the list
        public void Append(int data)
        {
            Node newNode = new Node(data);
            if (head == null)
            {
                head = newNode;  // If list is empty, new node becomes head
            }
            else
            {
                Node current = head;
                while (current.next != null)  // Traverse to the last node
                {
                    current = current.next;
                }
                current.next = newNode;  // Add new node at the end
            }
        }

        // Method to display the linked list
        public void Display()
        {
            Node current = head;
            while (current != null)
            {
                Console.Write(current.data + " -> ");
                current = current.next;
            }
            Console.WriteLine("null");
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            LinkedList list = new LinkedList();

            // Adding elements to the linked list
            list.Append(10);
            list.Append(20);
            list.Append(30);
            list.Append(40);

            // Display the linked list
            Console.WriteLine("Singly Linked List:");
            list.Display();
        }
    }
}
