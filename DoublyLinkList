using System;

public class Node
{
    public int data;
    public Node prev;
    public Node next;

    public Node(int data)
    {
        this.data = data;
        this.prev = null;
        this.next = null;
    }
}

public class DoublyLinkedList
{
    private Node head;

    public DoublyLinkedList()
    {
        this.head = null;
    }

    // Add a node at the front of the list
    public void AddToFront(int data)
    {
        Node newNode = new Node(data);
        newNode.next = head;
        if (head != null)
            head.prev = newNode;
        head = newNode;
    }

    // Add a node at the end of the list
    public void AddToEnd(int data)
    {
        Node newNode = new Node(data);
        if (head == null)
        {
            head = newNode;
            return;
        }

        Node lastNode = head;
        while (lastNode.next != null)
        {
            lastNode = lastNode.next;
        }

        lastNode.next = newNode;
        newNode.prev = lastNode;
    }

    // Delete a node by value
    public void DeleteNode(int data)
    {
        Node temp = head;

        while (temp != null && temp.data != data)
        {
            temp = temp.next;
        }

        if (temp == null)
        {
            Console.WriteLine("Node not found.");
            return;
        }

        if (temp.prev != null)
            temp.prev.next = temp.next;
        else
            head = temp.next;

        if (temp.next != null)
            temp.next.prev = temp.prev;
    }

    // Print the list from the head
    public void PrintList()
    {
        Node current = head;
        while (current != null)
        {
            Console.Write(current.data + " ");
            current = current.next;
        }
        Console.WriteLine();
    }
}

class Program
{
    static void Main()
    {
        DoublyLinkedList dll = new DoublyLinkedList();

        // Adding elements to the front
        dll.AddToFront(3);
        dll.AddToFront(2);
        dll.AddToFront(1);
        Console.WriteLine("List after adding to front:");
        dll.PrintList();

        // Adding elements to the end
        dll.AddToEnd(4);
        dll.AddToEnd(5);
        Console.WriteLine("List after adding to end:");
        dll.PrintList();

        // Deleting an element
        dll.DeleteNode(3);
        Console.WriteLine("List after deleting node with data 3:");
        dll.PrintList();
    }
}
